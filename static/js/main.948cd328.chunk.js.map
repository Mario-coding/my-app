{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","handleBtnClick","alert","state","fullname","age","handleChange","event","name","target","value","newState","setState","className","src","logo","alt","this","placeholder","onChange","type","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,eCkD1BA,E,kDAxCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,eAAiB,WACfC,MAAM,GAAD,OAAI,EAAKC,MAAMC,SAAf,YAA2B,EAAKD,MAAME,OAT1B,EAYnBC,aAAe,SAACC,GAAgD,IACtDC,EAASD,EAAME,OAAfD,KACAE,EAAUH,EAAME,OAAhBC,MAEFC,EAAQ,eAAQ,EAAKR,OAC3BQ,EAASH,GAAQE,EAEjB,EAAKE,SAASD,IAjBd,EAAKR,MAAQ,CACXC,SAAU,GACVC,IAAK,IAJU,E,0CAsBnB,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,iCACE,uBAAOR,KAAK,WAAWE,MAAOO,KAAKd,MAAMC,SAAUc,YAAY,qBAAqBC,SAAUF,KAAKX,eACnG,uBACA,uBAAOE,KAAK,MAAME,MAAOO,KAAKd,MAAME,IAAKa,YAAY,gBAAgBC,SAAUF,KAAKX,eACpF,uBACA,wBAAQc,KAAK,SAASC,QAASJ,KAAKhB,eAApC,8B,GAjCMqB,IAAMC,WCKTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.948cd328.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\ninterface IAppState {\r\n  fullname: string;\r\n  age: string;\r\n}\r\n\r\nclass App extends React.Component<{}, IAppState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: '',\r\n      age: '',\r\n    }\r\n  }\r\n\r\n  handleBtnClick = () => {\r\n    alert(`${this.state.fullname} ${this.state.age}`)\r\n  }\r\n\r\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name } = event.target;\r\n    const { value } = event.target;\r\n\r\n    const newState = { ...this.state };\r\n    newState[name] = value;\r\n\r\n    this.setState(newState);  \r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <form>\r\n            <input name=\"fullname\" value={this.state.fullname} placeholder=\"type fullname here\" onChange={this.handleChange} />\r\n            <br/>\r\n            <input name=\"age\" value={this.state.age} placeholder=\"type age here\" onChange={this.handleChange} />\r\n            <br/>\r\n            <button type=\"button\" onClick={this.handleBtnClick}>SAVE</button>\r\n          </form>\r\n       </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}